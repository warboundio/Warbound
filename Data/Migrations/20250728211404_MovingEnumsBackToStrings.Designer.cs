// <auto-generated />
using System;
using Data.BlizzardAPI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(BlizzardAPIContext))]
    [Migration("20250728211404_MovingEnumsBackToStrings")]
    partial class MovingEnumsBackToStrings
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Data.Addon.LootItemSummary", b =>
                {
                    b.Property<int>("NpcId")
                        .HasColumnType("integer");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("NpcId", "ItemId");

                    b.ToTable("g_loot_item_summary", "wow");
                });

            modelBuilder.Entity("Data.Addon.LootLocationEntry", b =>
                {
                    b.Property<int>("NpcId")
                        .HasColumnType("integer");

                    b.Property<int>("X")
                        .HasColumnType("integer");

                    b.Property<int>("Y")
                        .HasColumnType("integer");

                    b.Property<int>("ZoneId")
                        .HasColumnType("integer");

                    b.HasKey("NpcId", "X", "Y", "ZoneId");

                    b.ToTable("g_loot_location_entry", "wow");
                });

            modelBuilder.Entity("Data.Addon.NpcKillCount", b =>
                {
                    b.Property<int>("NpcId")
                        .HasColumnType("integer");

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.HasKey("NpcId");

                    b.ToTable("g_npc_kill_count", "wow");
                });

            modelBuilder.Entity("Data.Addon.PetBattleLocation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("MapId")
                        .HasColumnType("integer");

                    b.Property<int>("PetSpeciesId")
                        .HasColumnType("integer");

                    b.Property<int>("X")
                        .HasColumnType("integer");

                    b.Property<int>("Y")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("g_pet_battle_location", "wow");
                });

            modelBuilder.Entity("Data.Addon.Vendor", b =>
                {
                    b.Property<int>("NpcId")
                        .HasColumnType("integer");

                    b.Property<string>("Faction")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int>("MapId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("character varying(127)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(31)
                        .HasColumnType("character varying(31)");

                    b.Property<int>("X")
                        .HasColumnType("integer");

                    b.Property<int>("Y")
                        .HasColumnType("integer");

                    b.HasKey("NpcId");

                    b.ToTable("g_vendor", "wow");
                });

            modelBuilder.Entity("Data.Addon.VendorItem", b =>
                {
                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<int>("VendorId")
                        .HasColumnType("integer");

                    b.Property<int>("Cost")
                        .HasColumnType("integer");

                    b.Property<int>("CostId")
                        .HasColumnType("integer");

                    b.Property<string>("CostType")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("character varying(7)");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("ItemId", "VendorId");

                    b.ToTable("g_vendor_item", "wow");
                });

            modelBuilder.Entity("Data.BlizzardAPI.Models.Achievement", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("CriteriaIds")
                        .IsRequired()
                        .HasMaxLength(2047)
                        .HasColumnType("character varying(2047)");

                    b.Property<string>("CriteriaTypes")
                        .IsRequired()
                        .HasMaxLength(2047)
                        .HasColumnType("character varying(2047)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2047)
                        .HasColumnType("character varying(2047)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTime>("LastUpdatedUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("Points")
                        .HasColumnType("integer");

                    b.Property<string>("RewardDescription")
                        .IsRequired()
                        .HasMaxLength(2047)
                        .HasColumnType("character varying(2047)");

                    b.Property<int?>("RewardItemId")
                        .HasColumnType("integer");

                    b.Property<string>("RewardItemName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("achievement", "wow");
                });

            modelBuilder.Entity("Data.BlizzardAPI.Models.AchievementMedia", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastUpdatedUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasMaxLength(2047)
                        .HasColumnType("character varying(2047)");

                    b.HasKey("Id");

                    b.ToTable("achievement_media", "wow");
                });

            modelBuilder.Entity("Data.BlizzardAPI.Models.AuctionRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsCommodity")
                        .HasColumnType("boolean");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("auction", "wow");
                });

            modelBuilder.Entity("Data.BlizzardAPI.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("ClassType")
                        .IsRequired()
                        .HasMaxLength(63)
                        .HasColumnType("character varying(63)");

                    b.Property<string>("InventoryType")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("character varying(127)");

                    b.Property<bool>("IsEquippable")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsStackable")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("LastUpdatedUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<int>("MaxCount")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("character varying(127)");

                    b.Property<int>("PurchasePrice")
                        .HasColumnType("integer");

                    b.Property<int>("QualityType")
                        .HasColumnType("integer");

                    b.Property<int>("RequiredLevel")
                        .HasColumnType("integer");

                    b.Property<int>("SellPrice")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("SubclassType")
                        .IsRequired()
                        .HasMaxLength(63)
                        .HasColumnType("character varying(63)");

                    b.HasKey("Id");

                    b.ToTable("item", "wow");
                });

            modelBuilder.Entity("Data.BlizzardAPI.Models.ItemAppearance", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("ClassType")
                        .IsRequired()
                        .HasMaxLength(63)
                        .HasColumnType("character varying(63)");

                    b.Property<int>("DisplayInfoId")
                        .HasColumnType("integer");

                    b.Property<string>("ItemIds")
                        .IsRequired()
                        .HasMaxLength(511)
                        .HasColumnType("character varying(511)");

                    b.Property<DateTime>("LastUpdatedUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SlotType")
                        .IsRequired()
                        .HasMaxLength(63)
                        .HasColumnType("character varying(63)");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("SubclassType")
                        .IsRequired()
                        .HasMaxLength(63)
                        .HasColumnType("character varying(63)");

                    b.HasKey("Id");

                    b.ToTable("item_appearance", "wow");
                });

            modelBuilder.Entity("Data.BlizzardAPI.Models.ItemMedia", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastUpdatedUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("character varying(1023)");

                    b.HasKey("Id");

                    b.ToTable("item_media", "wow");
                });

            modelBuilder.Entity("Data.BlizzardAPI.Models.JournalEncounter", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("CategoryType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("InstanceId")
                        .HasColumnType("integer");

                    b.Property<string>("InstanceName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Items")
                        .IsRequired()
                        .HasMaxLength(2047)
                        .HasColumnType("character varying(2047)");

                    b.Property<DateTime>("LastUpdatedUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModesTypes")
                        .IsRequired()
                        .HasMaxLength(2047)
                        .HasColumnType("character varying(2047)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("journal_encounter", "wow");
                });

            modelBuilder.Entity("Data.BlizzardAPI.Models.JournalExpansion", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("DungeonIds")
                        .IsRequired()
                        .HasMaxLength(2047)
                        .HasColumnType("character varying(2047)");

                    b.Property<DateTime>("LastUpdatedUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("character varying(127)");

                    b.Property<string>("RaidIds")
                        .IsRequired()
                        .HasMaxLength(2047)
                        .HasColumnType("character varying(2047)");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("journal_expansion", "wow");
                });

            modelBuilder.Entity("Data.BlizzardAPI.Models.JournalInstanceMedia", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastUpdatedUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("character varying(1023)");

                    b.HasKey("Id");

                    b.ToTable("journal_instance_media", "wow");
                });

            modelBuilder.Entity("Data.BlizzardAPI.Models.Mount", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<int>("CreatureDisplayId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastUpdatedUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("character varying(127)");

                    b.Property<string>("SourceType")
                        .IsRequired()
                        .HasMaxLength(63)
                        .HasColumnType("character varying(63)");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("mount", "wow");
                });

            modelBuilder.Entity("Data.BlizzardAPI.Models.ObjectExpansionMapping", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<char>("CollectionType")
                        .HasColumnType("character(1)");

                    b.Property<int>("ExpansionId")
                        .HasColumnType("integer");

                    b.HasKey("Id", "CollectionType");

                    b.ToTable("object_expansion", "wow");
                });

            modelBuilder.Entity("Data.BlizzardAPI.Models.Pet", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("BattlePetType")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("character varying(127)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<bool>("IsAllianceOnly")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBattlePet")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCapturable")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHordeOnly")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTradable")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("LastUpdatedUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("character varying(127)");

                    b.Property<string>("SourceType")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("character varying(127)");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("pet", "wow");
                });

            modelBuilder.Entity("Data.BlizzardAPI.Models.Profession", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastUpdatedUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("character varying(127)");

                    b.Property<string>("SkillTiers")
                        .IsRequired()
                        .HasMaxLength(1027)
                        .HasColumnType("character varying(1027)");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("character varying(127)");

                    b.HasKey("Id");

                    b.ToTable("profession", "wow");
                });

            modelBuilder.Entity("Data.BlizzardAPI.Models.ProfessionMedia", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastUpdatedUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("character varying(1023)");

                    b.HasKey("Id");

                    b.ToTable("profession_media", "wow");
                });

            modelBuilder.Entity("Data.BlizzardAPI.Models.Quest", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastUpdatedUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(511)
                        .HasColumnType("character varying(511)");

                    b.Property<int>("QuestIdentifier")
                        .HasColumnType("integer");

                    b.Property<int>("QuestIdentifierId")
                        .HasColumnType("integer");

                    b.Property<int>("QuestTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("RewardItems")
                        .IsRequired()
                        .HasMaxLength(2047)
                        .HasColumnType("character varying(2047)");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("quest", "wow");
                });

            modelBuilder.Entity("Data.BlizzardAPI.Models.QuestArea", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastUpdatedUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("quest_area", "wow");
                });

            modelBuilder.Entity("Data.BlizzardAPI.Models.QuestCategory", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastUpdatedUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("quest_category", "wow");
                });

            modelBuilder.Entity("Data.BlizzardAPI.Models.QuestType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastUpdatedUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(63)
                        .HasColumnType("character varying(63)");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("quest_type", "wow");
                });

            modelBuilder.Entity("Data.BlizzardAPI.Models.Realm", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(63)
                        .HasColumnType("character varying(63)");

                    b.Property<bool>("IsTournament")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("LastUpdatedUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Locale")
                        .IsRequired()
                        .HasMaxLength(63)
                        .HasColumnType("character varying(63)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(63)
                        .HasColumnType("character varying(63)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasMaxLength(63)
                        .HasColumnType("character varying(63)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(63)
                        .HasColumnType("character varying(63)");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Timezone")
                        .IsRequired()
                        .HasMaxLength(63)
                        .HasColumnType("character varying(63)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(63)
                        .HasColumnType("character varying(63)");

                    b.HasKey("Id");

                    b.ToTable("realm", "wow");
                });

            modelBuilder.Entity("Data.BlizzardAPI.Models.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<int>("CraftedItemId")
                        .HasColumnType("integer");

                    b.Property<int>("CraftedQuantity")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastUpdatedUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("character varying(127)");

                    b.Property<int>("ProfessionId")
                        .HasColumnType("integer");

                    b.Property<string>("Reagents")
                        .IsRequired()
                        .HasMaxLength(2047)
                        .HasColumnType("character varying(2047)");

                    b.Property<int>("SkillTierId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("recipe", "wow");
                });

            modelBuilder.Entity("Data.BlizzardAPI.Models.RecipeMedia", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastUpdatedUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("character varying(1023)");

                    b.HasKey("Id");

                    b.ToTable("recipe_media", "wow");
                });

            modelBuilder.Entity("Data.BlizzardAPI.Models.Toy", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastUpdatedUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("MediaId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("character varying(127)");

                    b.Property<string>("SourceType")
                        .IsRequired()
                        .HasMaxLength(31)
                        .HasColumnType("character varying(31)");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("toy", "wow");
                });
#pragma warning restore 612, 618
        }
    }
}
