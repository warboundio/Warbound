// <auto-generated />
using System;
using Core.ETL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Core.Migrations
{
    [DbContext(typeof(CoreContext))]
    [Migration("20250715181529_AddingETLTables")]
    partial class AddingETLTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Core.ETL.ETLJob", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CRONSchedule")
                        .IsRequired()
                        .HasMaxLength(63)
                        .HasColumnType("character varying(63)");

                    b.Property<int?>("LastDurationMilliseconds")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("LastSuccessAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("LockAcquiredAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LockOwner")
                        .HasMaxLength(127)
                        .HasColumnType("character varying(127)");

                    b.Property<int>("LockTimeoutMinutes")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("character varying(1023)");

                    b.Property<bool>("WasLastRunSuccessful")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("etl_jobs", "application");
                });
#pragma warning restore 612, 618
        }
    }
}
